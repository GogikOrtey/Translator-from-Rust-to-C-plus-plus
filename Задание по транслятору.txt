Задание по транслятору:

• Добавить обработку if else elseif
• Проверить генерацию функций, циклов for и while


——————————————————————
Пока что не работают:

Логические операции (и или не xor)
Двойные операции (+= *=) 
Очерёдность операций в скобках не учитывается

По функциям:

Нет области видимости переменных
Нет области видимости функий
Нет правильной расстановки функций (до их вызова)
Не учитывается и не проверяется возвращаемое значение у функций (return)
Не задаётся возвращаемый тип значений у функций (другие, кроме void)
Не поддерживается передача больше 1 аргумента в функцию (без аргументов можно)
Нет удаления неиспользуемых функий
Не поддерживается ключевое слово return в методе main()

НО, по спарвдливости говоря, в официальном задании от Глазырина - нет ни слова про реализацию функций) Так что, получается, я сделал даже чуть больше, чем было нужно

——————————————————————



• Отладить трансляцию больших примеров кода.
Сделать примеров 5, со всеми функциями
+ По 1 примеру на каждое исключение - сохранить входной код, и скриншот работы программы

• По тестам - нужно будет 5-7 больших примеров кода, охватывающие все возможности транслятора
И по 1 примеру со скрином консоли - на каждую обрабатываемую ошибку
• Также надо будет описать тестовые ситуации для каждого блока транслятора (лексера, проверки синтаксиса, проверки семантики и кодогенератора)






















———————————————
Проверить, если работает и так, то не реализовывать:

• Мы не будем кидать ошибки, когда пользоватль во входном коде присваивает переменной значение, несоответствующие её типу
• Также, мы не будем выдавать предупреждение, если при выполнении операции, в переменной-результате произойдёт переполнение значения

• Возможно, в самом начале программы, при запуске, явно перечислить все возможности и ограничения данного транслятора. Можно ждать, пока пользователь не нажмёт какую-нибудь кнопку, для продолжения

• После метода return в main() удалять весь код (как недостижимый)
• Добавить видимость у функций
• Поправить видимусть у переменных - созданных внутри функций



